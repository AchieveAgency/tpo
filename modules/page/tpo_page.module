<?php

/**
 * @file
 * Contains tpo_page.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function tpo_page_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the tpo_page module.
    case 'help.page.tpo_page':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Pages submodule for TPO.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function tpo_page_theme() {
  return [
    'tpo_page' => [
      'render element' => 'children',
    ],
    'region__content__node_type__tpo_page' => [
      'render element' => 'children',
    ],
    'region__header__node_type__tpo_page' => [
      'render element' => 'children',
    ],
  ];
}

function tpo_page_get_file_url($field) {
  if (isset($field->entity)) {
    return file_create_url($field->entity->getFileUri());
  }
  else {
    return '#';
  }
}

function tpo_page_get_page_header($node) {
  if (
    $node->get('field_tpo_page_header')->value == "parent"
    && $node->get('field_tpo_page_parent')->first()
    && $parent = $node->get('field_tpo_page_parent')->first()->get('entity')->getTarget()->getValue()
  ) {
    return tpo_page_get_page_header($parent);
  }
  else {
    return [
      'style' => $node->get('field_tpo_page_header')->value,
      'color' => $node->get('field_tpo_page_header_color')->value,
      'video' => tpo_page_get_file_url($node->get('field_tpo_page_header_video')),
      'image' => [
        'url' => tpo_page_get_file_url($node->get('field_tpo_page_header_image')),
        'mode' => $node->get('field_tpo_page_header_image_mode')->value,
      ],
    ];
  }
}

function tpo_page_process_menu_node(&$node) {
  if ($node['page'] > 0) {
    $node['url'] = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$node['page']);
  }

  // unset($node['page']);
  // unset($node['parent']);

  if (isset($node['children']) && is_array($node['children']) && count($node['children']) > 0) {
    array_walk($node['children'], 'tpo_page_process_menu_node');
  }
}

function tpo_page_build_sidebar_menu($active) {
  $connection = \Drupal::database();
  $query = $connection->query("
    SELECT
      node.nid AS page,
      COALESCE(parent.field_tpo_page_parent_target_id, 0) AS parent,
      node.title AS title,
      '#' AS url,
      include.field_tpo_page_sidebar_menu_incl_value AS include
    FROM node_field_data node
    LEFT JOIN node__field_tpo_page_parent parent
      ON node.nid = parent.entity_id
    LEFT JOIN node__field_tpo_page_sidebar_menu_incl include
      ON node.nid = include.entity_id
    WHERE node.type = 'tpo_page';
  ");
  $records = $query->fetchAll(\PDO::FETCH_ASSOC);
  array_unshift($records, [ 'page' => 0, 'parent' => NULL ]);

  $hierarchy = [];
  $lookup = [];

  foreach ($records as $record) {
    $nid = $record['page'];
    $pid = $record['parent'];
    $record['active'] = ($nid == $active);

    if (isset($lookup[$pid])) {
      $lookup[$pid]['children'][$nid] = $record;
      $lookup[$nid] =& $lookup[$pid]['children'][$nid];
    }
    elseif (!$pid || !isset($hierarchy[$pid])) {
      $record['children'] = [];
      $hierarchy[$nid] = $record;
      $lookup[$nid] =& $hierarchy[$nid];
    }
  }
  unset($records, $record, $nid, $pid);

  foreach ($hierarchy as $nid => &$record) {
    $pid = $record['parent'];
    if ( isset($lookup[$pid] ) ) {
      $lookup[$pid]['children'][$nid] = $record;
      unset($hierarchy[$nid]);
    }
  }

  tpo_page_process_menu_node($hierarchy[0]);

  return $hierarchy[0];
}

function tpo_page_get_page_sidebar($node) {
  if ($node->get('field_tpo_page_sidebar_menu')->value == 1) {
    return tpo_page_build_sidebar_menu($node->id());
  }
  else {
    return FALSE;
  }
}

function tpo_page_get_page_data($node) {
  return [
    'general' => [
      'id' => $node->get('field_tpo_page_id')->value,
      'class' => $node->get('field_tpo_page_class')->value,
      'metatags' => $node->get('field_tpo_page_metatags')->value,
    ],
    'sidebar' => tpo_page_get_page_sidebar($node),
    'header' => tpo_page_get_page_header($node),
  ];
}

/**
 * Implementation of hook_theme_suggestions_alter().
 */
function tpo_page_theme_suggestions_alter(array &$suggestions, array &$variables, $hook) {
  if (
    !(preg_match('/node\/(\d+)\/edit/', \Drupal::service('path.current')->getPath(), $matches))
    && $hook == 'region'
    && ($node = \Drupal::request()->attributes->get('node'))
    && $node->bundle() == 'tpo_page'
    && (
      in_array('region__content', $suggestions)
      || in_array('region__header', $suggestions)
    )
  ) {
    $variables['tpo_page'] = tpo_page_get_page_data($node);

    if (in_array('region__content', $suggestions)) {
      array_unshift($suggestions, 'region__content__node_type__tpo_page');
    }
    else if (in_array('region__header', $suggestions)) {
      array_unshift($suggestions, 'region__header__node_type__tpo_page');
    }
    // \Drupal::logger('tpo_page')->notice("<pre>".print_r($variables['tpo_page'],true)."</pre>");
  }
}
